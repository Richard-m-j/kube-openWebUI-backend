# 06-ingress-openwebui-root.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: modelmanager-ingress
  annotations:
    # Use regex to capture parts of the URL for rewriting
    nginx.ingress.kubernetes.io/use-regex: "true"
    
    # Optional: CORS headers if needed by your applications
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      # Rule 1: Backend API for the Model Manager
      # Path: /api/... -> backend service (port 8000)
      # Rewrites "/api/models" to "/models" before sending to the backend pod.
      - path: /api(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend
            port:
              number: 8000
          # This annotation must be defined within the 'path' for per-path rewrites
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /$2

      # Rule 2: Frontend for the Model Manager
      # Path: /modelmanager/... -> frontend service (port 80)
      # Rewrites "/modelmanager/index.html" to "/index.html"
      - path: /modelmanager(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: frontend
            port:
              number: 80
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /$2

      # Rule 3: OpenWebUI at the Root
      # Path: / -> open-webui service (port 8080)
      # This is the catch-all rule and MUST be last. It has no rewrite.
      - path: /
        pathType: Prefix
        backend:
          service:
            name: open-webui
            port:
              number: 8080